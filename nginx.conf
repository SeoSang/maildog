worker_processes  auto;

pid /var/logs/nginx.pid;

events {
  worker_connections  1024;
}

http {
  map $time_iso8601 $logdate {
    '~^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})' $year$month$day;
    default 'nodate';
  }
  log_format  myformat '$remote_addr - - [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$cookie_NNB" $http_NID_OLD $http_NID_SEX $request_time';

  access_log  '/var/logs/maildog/access.${logdate}.log' myformat;
  error_log  /var/logs/maildog/error.log error;
  sendfile on;

  gzip  on;
  gzip_types
   text/plain
   text/css
   text/js
   text/xml
   text/javascript
   application/javascript
   application/x-javascript
   application/json
   application/xml
   application/rss+xml
   image/svg+xml;
  gzip_proxied any;
  gzip_disable msie6;
  gzip_vary on;
  gzip_http_version 1.1;
  gzip_comp_level 4;
  gzip_min_length 1000;
        
    upstream maildog {
        least_conn;
        server 127.0.0.1:3001 weight=5 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:3002 weight=10 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 80; # you can use 443 and letsencrypt to get SSL for free
        server_name maildog.com; # domain name
    
        # for public asset into _next directory
        location _next/ {
            alias /home/ubuntu/maildog/web/.next/;
            expires 30d;
            access_log on;
        }
    
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
    
            # we need to remove this 404 handling
            # because next's _next folder and own handling
            # try_files $uri $uri/ =404;
        }
    }   
}